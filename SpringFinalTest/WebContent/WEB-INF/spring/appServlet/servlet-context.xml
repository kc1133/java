<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<mvc:annotation-driven />
<!-- 	<annotation-driven conversion-service="conversionService" > -->
<!-- 		<argument-resolvers> -->
<!-- 			<beans:bean class="org.springframework.samples.mvc.data.custom.CustomArgumentResolver"/> -->
<!-- 		</argument-resolvers> -->
<!-- 		<async-support default-timeout="3000"> -->
<!-- 			<callable-interceptors> -->
<!-- 				<beans:bean class="org.springframework.samples.mvc.async.TimeoutCallableProcessingInterceptor" /> -->
<!-- 			</callable-interceptors> -->
<!-- 		</async-support> -->
<!-- 	</annotation-driven> -->

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources/ directory -->
	<resources mapping="/resources/**" location="/resources/" />
<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
   <beans:property name="exceptionMappings">
      <beans:props>
         <beans:prop key="org.springframework.samples.mvc.exceptions.MyException">
            ExceptionPage
         </beans:prop>
      </beans:props>
   </beans:property>
   <beans:property name="defaultErrorView" value="error"/>
</beans:bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	<beans:bean class="org.springframework.context.support.ResourceBundleMessageSource"
		id="messageSource">
		<beans:property name="basename" value="messages" />
	</beans:bean>
	
	<!-- Only needed because we install custom converters to support the examples in the org.springframewok.samples.mvc.convert package -->
	<beans:bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
		<beans:property name="formatters">
            <beans:bean class="org.springframework.samples.mvc.convert.MaskFormatAnnotationFormatterFactory" />
		</beans:property>
	</beans:bean>

	<!-- Only needed because we require fileupload in the org.springframework.samples.mvc.fileupload package -->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />
<!-- 	 <beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" -->
<!--         destroy-method="close"> -->
<!--         <beans:property name="driverClassName" value="com.mysql.jdbc.Driver" /> -->
<!--         <beans:property name="url" -->
<!--             value="jdbc:mysql://localhost:3306/TestDB" /> -->
<!--         <beans:property name="username" value="pankaj" /> -->
<!--         <beans:property name="password" value="pankaj123" /> -->
<!--     </beans:bean> -->
<!--     Hibernate 4 SessionFactory Bean definition -->
<!--     <beans:bean id="hibernate4AnnotatedSessionFactory" -->
<!--         class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"> -->
<!--         <beans:property name="dataSource" ref="dataSource" /> -->
<!--         <beans:property name="annotatedClasses"> -->
<!--             <beans:list> -->
<!--                 <beans:value>com.springframework.beans.Person</beans:value> -->
<!--             </beans:list> -->
<!--         </beans:property> -->
<!--         <beans:property name="hibernateProperties"> -->
<!--             <beans:props> -->
<!--                 <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect -->
<!--                 </beans:prop> -->
<!--                 <beans:prop key="hibernate.show_sql">true</beans:prop> -->
<!--             </beans:props> -->
<!--         </beans:property> -->
<!--     </beans:bean> -->
     
<!--     <beans:bean id="personDAO" class="com.springframework.beans.PersonDAOImpl"> -->
<!--         <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" /> -->
<!--     </beans:bean> -->
<!--     <beans:bean id="personService" class="com.springframework.beans.PersonServiceImpl"> -->
<!--         <beans:property name="personDAO" ref="personDAO"></beans:property> -->
<!--     </beans:bean> -->
<!--     <tx:annotation-driven transaction-manager="transactionManager"/> -->
     
<!--     <beans:bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"> -->
<!--         <beans:property name="sessionFactory" ref="hibernate4AnnotatedSessionFactory" /> -->
<!--     </beans:bean> -->
<beans:bean id="dataSource" 
      class="org.springframework.jdbc.datasource.DriverManagerDataSource">
      <beans:property name="driverClassName" value="com.mysql.jdbc.Driver"/>
      <beans:property name="url" value="jdbc:mysql://localhost:3306/TEST"/>
      <beans:property name="username" value="root"/>
      <beans:property name="password" value="password"/>
   </beans:bean>

   <!-- Definition for studentJDBCTemplate bean -->
   <beans:bean id="jdbcTemplateObject" 
      class="org.springframework.jdbc.core.JdbcTemplate">
      <beans:property name="dataSource"  ref="dataSource" />    
   </beans:bean>
   

	<task:annotation-driven />
	<beans:bean id="tilesConfigurer"  
        class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">  
        <beans:property name="definitions">  
            <beans:list>  
                <beans:value>/WEB-INF/tiles.xml</beans:value>  
            </beans:list>  
        </beans:property>  
    </beans:bean>  
	
</beans:beans>
